<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[cornerkick's blog]]></title>
  <link href="http://cornerkick.github.io/atom.xml" rel="self"/>
  <link href="http://cornerkick.github.io/"/>
  <updated>2014-11-05T22:02:18+08:00</updated>
  <id>http://cornerkick.github.io/</id>
  <author>
    <name><![CDATA[cornerkick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby Block Notes]]></title>
    <link href="http://cornerkick.github.io/blog/2014/11/05/ruby-block-notes/"/>
    <updated>2014-11-05T21:46:51+08:00</updated>
    <id>http://cornerkick.github.io/blog/2014/11/05/ruby-block-notes</id>
    <content type="html"><![CDATA[<h2>Ruby lambda vs Proc的区别</h2>

<h3>只有2个区别：</h3>

<ol>
<li>lambda检查传入参赛的个数</li>
<li>当lambda返回的时候，他会把控制权交还给调用他的函数，而Proc则会直接跳出那个方法</li>
</ol>


<p>代码，来自codecademy</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">batman_ironman_proc</span>
</span><span class='line'>  <span class="n">victor</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;Batman will win!&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">victor</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="s2">&quot;Iron Man will win!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">batman_ironman_proc</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">batman_ironman_lambda</span>
</span><span class='line'>  <span class="n">victor</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;Batman will win!&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">victor</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="s2">&quot;Iron Man will win!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">batman_ironman_lambda</span>
</span></code></pre></td></tr></table></div></figure>


<h4>控制台的结果</h4>

<p>Batman will win! <br>
Iron Man will win!</p>

<h2>Ruby block的小习题</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">crew</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">captain</span><span class="p">:</span> <span class="s2">&quot;Picard&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">first_officer</span><span class="p">:</span> <span class="s2">&quot;Riker&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">lt_cdr</span><span class="p">:</span> <span class="s2">&quot;Data&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">lt</span><span class="p">:</span> <span class="s2">&quot;Worf&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">ensign</span><span class="p">:</span> <span class="s2">&quot;Ro&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">counselor</span><span class="p">:</span> <span class="s2">&quot;Troi&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">chief_engineer</span><span class="p">:</span> <span class="s2">&quot;LaForge&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">doctor</span><span class="p">:</span>  <span class="s2">&quot;Crusher&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>crew是各个职位和该职位的员工姓名的字典
现在需要过滤掉名字首字母不在A－M的。<br>
Solution：
定义一个lambda制定了改规则，穿给crew字典
<code>before_M = lambda { |key, value| value[0] &lt; 'M' }</code>
应为要传给字典，所以需要两个lambda的参赛，及<code>|key, value|</code></p>

<p>最后，<code>A_to_M = crew.select(&amp;before_M)</code></p>

<h2>一点心得</h2>

<p>ruby中的block是对逻辑或者数据动作的封装，是的程序代码的data和behavior分离，降低了代码的耦合度。通过其传入list, 或者hash的map，each等接口，发挥了函数式编程的特点，避免的大量的循环。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://cornerkick.github.io/blog/2014/04/27/first-post/"/>
    <updated>2014-04-27T13:21:42+08:00</updated>
    <id>http://cornerkick.github.io/blog/2014/04/27/first-post</id>
    <content type="html"><![CDATA[<h2>我的第一个博客</h2>

<h3>Hi octopress and github, this is cornerkick speaking.</h3>
]]></content>
  </entry>
  
</feed>
